# -*- coding: utf-8 -*-
"""houseprice.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iy0wLGsE8DkGTiQHZiMNkL0zAQaDsivj
"""

pip install pandas numpy matplolib seaborn scikit-learn

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv("/content/housing.csv")
data

data.info()

data.dropna(inplace=True)

data.info()

from sklearn.model_selection import train_test_split
x = data.drop("median_house_value", axis=1)
y = data["median_house_value"]

x

y

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

train_data = x_train.join(y_train)
train_data

train_data.hist(figsize=(17,10))

"""plt.figure(figsize=(15,8))
sns.heatmaptrain_data.corr(), annot=True, cmap="YlGnBu")
"""

train_data['total_rooms'] = np.log(train_data['total_rooms']+1)
train_data['total_bedrooms'] = np.log(train_data['total_bedrooms']+1)
train_data['populaion'] = np.log(train_data['population']+1)
train_data['households'] = np.log(train_data['households']+1)

train_data.hist(figsize=(17,10))

train_data.ocean_proximity.value_counts()

train_data.join(pd.get_dummies(train_data.ocean_proximity)).drop(['ocean_proximity'],axis=1)
train_data

plt.figure(figsize=(17,10))
sns.scatterplot(x="latitude", y="longitude", data=train_data, hue="median_house_value")

train_data['bedroom_ratio']=train_data['total_bedrooms']/train_data['total_rooms']
train_data['household_rooms']=train_data['total_rooms']/train_data['households']
train_data

train_data = x_train.join(y_train)
train_data

test_data = x_test.join(y_test)
test_data
test_data['total_rooms'] = np.log(test_data['total_rooms']+1)
test_data['total_bedrooms'] = np.log(test_data['total_bedrooms']+1)
test_data['populaion'] = np.log(test_data['population']+1)
test_data['households'] = np.log(test_data['households']+1)

test_data = test_data.join(pd.get_dummies(test_data.ocean_proximity)).drop(['ocean_proximity'],axis=1)

test_data['bedroom_ratio']=test_data['total_bedrooms']/test_data['total_rooms']
test_data['household_rooms']=test_data['total_rooms']/test_data['households']

test_data

x_test, y_test = test_data.drop(["median_house_value"],axis=1), test_data["median_house_value"]